Parte 1 del trabajo completada
  Para la realización de la primera parte de trabajo se resolvió en el análisis individual del 
    problema y la presentación de soluciones por parte de cada uno de los integrantes de grupo,
    a excepción de mí (Anderson Marroquín Rivas, "anderRSTN59") ningún otro miembro ha presentado
    o aportado a esta parte del trabajo

  se ha implementado todo lo necesario para la lectura de los .graphml usando DOM:
    uso de DOM frente a SAX por mayor adaptabilidad por mi parte (Anderson)
  se han implementado clases propias para la generación del grafo, nodos y aristas
    se cometo el que no podemos usar las predeterminadas por el lenguaje por lo que he implementado 
      unas clases arcaicas para el comienzo del trabajo
  se han implementado opciones básicas de acceso a los datos (mostrar nodo, mostrar aristas, ...)
    se sugirió en clase que implementásemos algunos métodos para comprobar el correcto acceso a los
      datos, he optado por mostrar tanto los nodos como las arista de un grafo determinado, como 
      también de una línea con datos básicos del grafo (los que se piden para esta primera entrega)
  se ha implementado la opción de leer un directorio completo de .graphml
  se ha implementado el guardado de las líneas de datos de un conjunto de .graphml
  
Parte 2 del trabajo en proceso
  crear escritura y guardado de grafo en .graphml
  dibujar grafo en fromato vectorial (.svg con liberia "network") (Pospuesto)
  
  FINALIZADO:
    unificar clase grafo y la lectura, dibujar grafo y generar .png (Anderson)
      se han corregido errores en la generacion de la imagen, aristas que no se dibujaban e imagenes
        muy grandes que no se podian genera
    omitir temporalmente la leectura de datos que no son node(id, x, y) y edge (id, origen, destino,
        longitud) (Anderson)
      habían errores en la la lectura que se han corregido
      se ha optimizado el codigo rediciendo el tiempo de lectura en relacion T' = 3/4*T
      
Parte 3 no terminado
  finalizar tareas incompletas de la Parte 2 (en proceso) (Anderson)
  crear arbol de recubrimiento minino del grafo implementando Prim (en proceso) (Miguel) y Kruskal 
    (en proceso) (David)
    
  FINALIZADO:
    creacion de una estructura de ordenacion para implementar los algoritmos (Anderson)
  
